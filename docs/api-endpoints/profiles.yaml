paths:
  /profiles/{userId}:
    get:
      tags: [Profiles]
      summary: Get user profile
      description: Retrieves a user's public profile information
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: User profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Profile'
        404:
          description: User not found

  /profiles/social-links:
    put:
      tags: [Profiles]
      summary: Update social links
      description: Updates the social media links for the authenticated user's profile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                github:
                  type: string
                  format: uri
                linkedin:
                  type: string
                  format: uri
                twitter:
                  type: string
                  format: uri
                website:
                  type: string
                  format: uri
                instagram:
                  type: string
                  format: uri
                facebook:
                  type: string
                  format: uri
      responses:
        200:
          description: Social links updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Profile'
        401:
          description: Unauthorized
        400:
          description: Invalid input

components:
  schemas:
    Profile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        title:
          type: string
        bio:
          type: string
        avatarUrl:
          type: string
          format: uri
        phone:
          type: string
        location:
          type: string
        socialLinks:
          type: object
          properties:
            github:
              type: string
              format: uri
            linkedin:
              type: string
              format: uri
            twitter:
              type: string
              format: uri
            website:
              type: string
              format: uri
            instagram:
              type: string
              format: uri
            facebook:
              type: string
              format: uri
        resumeUrl:
          type: string
          format: uri
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time 