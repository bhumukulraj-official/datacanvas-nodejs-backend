paths:
  /projects:
    post:
      tags: [Projects]
      summary: Create new project
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        201:
          description: Project created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'

    get:
      tags: [Projects]
      summary: List projects
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [draft, published, archived]
      responses:
        200:
          description: Project list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'

  /projects/{projectId}/updates:
    post:
      tags: [Projects]
      summary: Create a project update
      security:
        - BearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
      responses:
        201:
          description: Project update created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUpdate'
    
    get:
      tags: [Projects]
      summary: Get all updates for a project
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: List of project updates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectUpdate'
  
  /projects/{projectId}/updates/{updateId}:
    get:
      tags: [Projects]
      summary: Get a specific project update
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: updateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Project update details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUpdate'
        404:
          description: Update not found
    
    put:
      tags: [Projects]
      summary: Update a project update
      security:
        - BearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: updateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
      responses:
        200:
          description: Project update modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUpdate'
    
    delete:
      tags: [Projects]
      summary: Delete a project update
      security:
        - BearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: updateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: Project update deleted

components:
  schemas:
    Project:
      type: object
      required: [title, description]
      properties:
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [draft, published, archived]
    
    ProjectUpdate:
      type: object
      required: [title, content]
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time 